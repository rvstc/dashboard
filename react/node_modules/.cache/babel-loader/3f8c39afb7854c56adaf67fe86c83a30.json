{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _classCallCheck = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar genomics_v1;\n\n(function (genomics_v1) {\n  /**\n   * Genomics API\n   *\n   * Uploads, processes, queries, and searches Genomics data in the cloud.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const genomics = google.genomics('v1');\n   *\n   * @namespace genomics\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Genomics\n   */\n  var Genomics =\n  /*#__PURE__*/\n  function () {\n    function Genomics(options, google) {\n      _classCallCheck(this, Genomics);\n\n      this.root = this;\n      this._options = options || {};\n      this.google = google;\n      this.getRoot.bind(this);\n      this.annotations = new Resource$Annotations(this);\n      this.annotationsets = new Resource$Annotationsets(this);\n      this.callsets = new Resource$Callsets(this);\n      this.datasets = new Resource$Datasets(this);\n      this.operations = new Resource$Operations(this);\n      this.readgroupsets = new Resource$Readgroupsets(this);\n      this.reads = new Resource$Reads(this);\n      this.references = new Resource$References(this);\n      this.referencesets = new Resource$Referencesets(this);\n      this.variants = new Resource$Variants(this);\n      this.variantsets = new Resource$Variantsets(this);\n    }\n\n    _createClass(Genomics, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }]);\n\n    return Genomics;\n  }();\n\n  genomics_v1.Genomics = Genomics;\n\n  var Resource$Annotations =\n  /*#__PURE__*/\n  function () {\n    function Resource$Annotations(root) {\n      _classCallCheck(this, Resource$Annotations);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Annotations, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"batchCreate\",\n      value: function batchCreate(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations:batchCreate').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['annotationId'],\n          pathParams: ['annotationId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['annotationId'],\n          pathParams: ['annotationId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotations/{annotationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['annotationId'],\n          pathParams: ['annotationId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Annotations;\n  }();\n\n  genomics_v1.Resource$Annotations = Resource$Annotations;\n\n  var Resource$Annotationsets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Annotationsets(root) {\n      _classCallCheck(this, Resource$Annotationsets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Annotationsets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotationsets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotationsets/{annotationSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['annotationSetId'],\n          pathParams: ['annotationSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotationsets/{annotationSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['annotationSetId'],\n          pathParams: ['annotationSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotationsets/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/annotationsets/{annotationSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['annotationSetId'],\n          pathParams: ['annotationSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Annotationsets;\n  }();\n\n  genomics_v1.Resource$Annotationsets = Resource$Annotationsets;\n\n  var Resource$Callsets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Callsets(root) {\n      _classCallCheck(this, Resource$Callsets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Callsets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/callsets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/callsets/{callSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['callSetId'],\n          pathParams: ['callSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/callsets/{callSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['callSetId'],\n          pathParams: ['callSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/callsets/{callSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['callSetId'],\n          pathParams: ['callSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/callsets/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Callsets;\n  }();\n\n  genomics_v1.Resource$Callsets = Resource$Callsets;\n\n  var Resource$Datasets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Datasets(root) {\n      _classCallCheck(this, Resource$Datasets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Datasets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets/{datasetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['datasetId'],\n          pathParams: ['datasetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets/{datasetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['datasetId'],\n          pathParams: ['datasetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"getIamPolicy\",\n      value: function getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets/{datasetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['datasetId'],\n          pathParams: ['datasetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"setIamPolicy\",\n      value: function setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"testIamPermissions\",\n      value: function testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"undelete\",\n      value: function undelete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/datasets/{datasetId}:undelete').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['datasetId'],\n          pathParams: ['datasetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Datasets;\n  }();\n\n  genomics_v1.Resource$Datasets = Resource$Datasets;\n\n  var Resource$Operations =\n  /*#__PURE__*/\n  function () {\n    function Resource$Operations(root) {\n      _classCallCheck(this, Resource$Operations);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Operations, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Operations;\n  }();\n\n  genomics_v1.Resource$Operations = Resource$Operations;\n\n  var Resource$Readgroupsets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Readgroupsets(root) {\n      _classCallCheck(this, Resource$Readgroupsets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.coveragebuckets = new Resource$Readgroupsets$Coveragebuckets(root);\n    }\n\n    _createClass(Resource$Readgroupsets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/{readGroupSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['readGroupSetId'],\n          pathParams: ['readGroupSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"export\",\n      value: function _export(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/{readGroupSetId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['readGroupSetId'],\n          pathParams: ['readGroupSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/{readGroupSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['readGroupSetId'],\n          pathParams: ['readGroupSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"import\",\n      value: function _import(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets:import').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/{readGroupSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['readGroupSetId'],\n          pathParams: ['readGroupSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Readgroupsets;\n  }();\n\n  genomics_v1.Resource$Readgroupsets = Resource$Readgroupsets;\n\n  var Resource$Readgroupsets$Coveragebuckets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Readgroupsets$Coveragebuckets(root) {\n      _classCallCheck(this, Resource$Readgroupsets$Coveragebuckets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Readgroupsets$Coveragebuckets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/readgroupsets/{readGroupSetId}/coveragebuckets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['readGroupSetId'],\n          pathParams: ['readGroupSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Readgroupsets$Coveragebuckets;\n  }();\n\n  genomics_v1.Resource$Readgroupsets$Coveragebuckets = Resource$Readgroupsets$Coveragebuckets;\n\n  var Resource$Reads =\n  /*#__PURE__*/\n  function () {\n    function Resource$Reads(root) {\n      _classCallCheck(this, Resource$Reads);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Reads, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/reads/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Reads;\n  }();\n\n  genomics_v1.Resource$Reads = Resource$Reads;\n\n  var Resource$References =\n  /*#__PURE__*/\n  function () {\n    function Resource$References(root) {\n      _classCallCheck(this, Resource$References);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.bases = new Resource$References$Bases(root);\n    }\n\n    _createClass(Resource$References, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/references/{referenceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['referenceId'],\n          pathParams: ['referenceId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/references/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$References;\n  }();\n\n  genomics_v1.Resource$References = Resource$References;\n\n  var Resource$References$Bases =\n  /*#__PURE__*/\n  function () {\n    function Resource$References$Bases(root) {\n      _classCallCheck(this, Resource$References$Bases);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$References$Bases, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/references/{referenceId}/bases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['referenceId'],\n          pathParams: ['referenceId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$References$Bases;\n  }();\n\n  genomics_v1.Resource$References$Bases = Resource$References$Bases;\n\n  var Resource$Referencesets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Referencesets(root) {\n      _classCallCheck(this, Resource$Referencesets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Referencesets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/referencesets/{referenceSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['referenceSetId'],\n          pathParams: ['referenceSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/referencesets/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Referencesets;\n  }();\n\n  genomics_v1.Resource$Referencesets = Resource$Referencesets;\n\n  var Resource$Variants =\n  /*#__PURE__*/\n  function () {\n    function Resource$Variants(root) {\n      _classCallCheck(this, Resource$Variants);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Variants, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants/{variantId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['variantId'],\n          pathParams: ['variantId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants/{variantId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['variantId'],\n          pathParams: ['variantId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"import\",\n      value: function _import(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants:import').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"merge\",\n      value: function merge(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants:merge').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants/{variantId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['variantId'],\n          pathParams: ['variantId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variants/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Variants;\n  }();\n\n  genomics_v1.Resource$Variants = Resource$Variants;\n\n  var Resource$Variantsets =\n  /*#__PURE__*/\n  function () {\n    function Resource$Variantsets(root) {\n      _classCallCheck(this, Resource$Variantsets);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Variantsets, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets/{variantSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['variantSetId'],\n          pathParams: ['variantSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"export\",\n      value: function _export(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets/{variantSetId}:export').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['variantSetId'],\n          pathParams: ['variantSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets/{variantSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['variantSetId'],\n          pathParams: ['variantSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets/{variantSetId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['variantSetId'],\n          pathParams: ['variantSetId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://genomics.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/variantsets/search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Variantsets;\n  }();\n\n  genomics_v1.Resource$Variantsets = Resource$Variantsets;\n})(genomics_v1 = exports.genomics_v1 || (exports.genomics_v1 = {}));","map":null,"metadata":{},"sourceType":"script"}