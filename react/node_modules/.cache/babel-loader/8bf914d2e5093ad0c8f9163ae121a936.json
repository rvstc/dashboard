{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _List = require('../List/List');\n\nvar _List2 = _interopRequireDefault(_List);\n\nvar _ListItem = require('../List/ListItem');\n\nvar _ListItem2 = _interopRequireDefault(_ListItem);\n\nvar _FormField = require('../FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nvar _Radio = require('./Radio');\n\nvar _Radio2 = _interopRequireDefault(_Radio);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar propTypes = {\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.arrayOf(function (propValue, key, componentName) {\n    var type = propValue[key].type;\n\n    if (type !== _Radio2.default) {\n      return new Error('Invalid prop \\'children[' + key + ']\\' supplied to \\'' + componentName + '\\', expected \\'Radio\\'');\n    }\n\n    return false;\n  }),\n  name: _propTypes2.default.string.isRequired,\n  onChange: _propTypes2.default.func,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar RadioGroup = function RadioGroup(_ref) {\n  var className = _ref.className,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      otherProps = _objectWithoutProperties(_ref, ['className', 'name', 'onChange', 'value']);\n\n  var childs = _react.Children.map(otherProps.children, function (child) {\n    var _child$props = child.props,\n        id = _child$props.id,\n        children = _child$props.children,\n        childValue = _child$props.value;\n    var customId = id || 'radio-' + (name || '') + '-' + childValue;\n    var radio = (0, _react.cloneElement)(child, {\n      checked: childValue === value,\n      id: customId,\n      name: name,\n      onChange: onChange\n    });\n    return _react2.default.createElement(_ListItem2.default, null, _react2.default.createElement(_FormField2.default, {\n      id: customId\n    }, radio, _react2.default.createElement('label', null, children)));\n  });\n\n  return _react2.default.createElement(_List2.default, {\n    className: className\n  }, childs);\n};\n\nRadioGroup.propTypes = propTypes;\nexports.default = RadioGroup;","map":null,"metadata":{},"sourceType":"script"}