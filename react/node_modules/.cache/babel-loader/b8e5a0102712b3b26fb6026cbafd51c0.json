{"ast":null,"code":"import _classCallCheck from \"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as types from './types';\nimport { MEMBER_DATA_LOADED } from 'services/gapi/types';\nimport { logUser, lookupResults } from './actions';\nimport { loadData } from 'services/gapi/actions';\n\nvar UserMiddleware =\n/*#__PURE__*/\nfunction () {\n  function UserMiddleware() {\n    var _this = this;\n\n    _classCallCheck(this, UserMiddleware);\n\n    return function (store) {\n      _this.store = store;\n      return _this.muxer();\n    };\n  }\n\n  _createClass(UserMiddleware, [{\n    key: \"muxer\",\n    value: function muxer() {\n      var _this2 = this;\n\n      return function (next) {\n        return function (action) {\n          if (action.type === types.LOOKUP_USER) {\n            _this2.lookupUser(action.payload.query);\n          } else if (action.type === MEMBER_DATA_LOADED) {\n            _this2.updateMemberData(action.payload);\n          }\n\n          return next(action);\n        };\n      };\n    }\n  }, {\n    key: \"updateMemberData\",\n    value: function updateMemberData(data) {\n      this.members = data.slice(1).reduce(function (list, row) {\n        list.push({\n          id: row[0],\n          name: row[1]\n        });\n        return list;\n      }, []);\n      console.log(this.members);\n    }\n  }, {\n    key: \"lookupUser\",\n    value: function lookupUser(query) {\n      var results = [];\n      debugger;\n\n      for (var i = 0; i < this.members.length; i++) {\n        var member = this.members[i];\n\n        if (member.id == query || member.name.includes(query)) {\n          results.push(member);\n        }\n      }\n\n      if (results.length > 1) {\n        this.store.dispatch(lookupResults(results));\n      } else {\n        this.store.dispatch(logUser(results[0].name));\n      }\n    }\n  }]);\n\n  return UserMiddleware;\n}();\n\nexport { UserMiddleware as default };","map":{"version":3,"sources":["/Users/williamsnathan/src/dashboard/src/services/user/middleware.js"],"names":["types","MEMBER_DATA_LOADED","logUser","lookupResults","loadData","UserMiddleware","store","muxer","next","action","type","LOOKUP_USER","lookupUser","payload","query","updateMemberData","data","members","slice","reduce","list","row","push","id","name","console","log","results","i","length","member","includes","dispatch"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,WAAvC;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAGqBC,c;;;AAEnB,4BAAc;AAAA;;AAAA;;AACZ,WAAO,UAAAC,KAAK,EAAI;AACd,MAAA,KAAI,CAACA,KAAL,GAAaA,KAAb;AACA,aAAO,KAAI,CAACC,KAAL,EAAP;AACD,KAHD;AAID;;;;4BAEO;AAAA;;AACN,aAAO,UAAAC,IAAI;AAAA,eAAI,UAAAC,MAAM,EAAI;AACvB,cAAIA,MAAM,CAACC,IAAP,KAAgBV,KAAK,CAACW,WAA1B,EAAuC;AACrC,YAAA,MAAI,CAACC,UAAL,CAAgBH,MAAM,CAACI,OAAP,CAAeC,KAA/B;AACD,WAFD,MAEO,IAAIL,MAAM,CAACC,IAAP,KAAgBT,kBAApB,EAAwC;AAC7C,YAAA,MAAI,CAACc,gBAAL,CAAsBN,MAAM,CAACI,OAA7B;AACD;;AACD,iBAAOL,IAAI,CAACC,MAAD,CAAX;AACD,SAPU;AAAA,OAAX;AAQD;;;qCAEgBO,I,EAAM;AACrB,WAAKC,OAAL,GAAeD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcC,MAAd,CAAqB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACvDD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,UAAAA,EAAE,EAAEF,GAAG,CAAC,CAAD,CADC;AAERG,UAAAA,IAAI,EAAEH,GAAG,CAAC,CAAD;AAFD,SAAV;AAIA,eAAOD,IAAP;AACD,OANc,EAMZ,EANY,CAAf;AAOAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,OAAjB;AACD;;;+BAEUH,K,EAAO;AAChB,UAAMa,OAAO,GAAG,EAAhB;AAEA;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,OAAL,CAAaY,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAIE,MAAM,GAAG,KAAKb,OAAL,CAAaW,CAAb,CAAb;;AACA,YAAIE,MAAM,CAACP,EAAP,IAAaT,KAAb,IAAsBgB,MAAM,CAACN,IAAP,CAAYO,QAAZ,CAAqBjB,KAArB,CAA1B,EAAuD;AACrDa,UAAAA,OAAO,CAACL,IAAR,CAAaQ,MAAb;AACD;AACF;;AAED,UAAIH,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAKvB,KAAL,CAAW0B,QAAX,CAAoB7B,aAAa,CAACwB,OAAD,CAAjC;AACD,OAFD,MAEO;AACL,aAAKrB,KAAL,CAAW0B,QAAX,CAAoB9B,OAAO,CAACyB,OAAO,CAAC,CAAD,CAAP,CAAWH,IAAZ,CAA3B;AACD;AACF;;;;;;SAhDkBnB,c","sourcesContent":["import * as types from './types';\nimport { MEMBER_DATA_LOADED } from 'services/gapi/types';\nimport { logUser, lookupResults } from './actions';\nimport { loadData } from 'services/gapi/actions';\n\n\nexport default class UserMiddleware {\n\n  constructor() {\n    return store => {\n      this.store = store;\n      return this.muxer();\n    };\n  }\n\n  muxer() {\n    return next => action => {\n      if (action.type === types.LOOKUP_USER) {\n        this.lookupUser(action.payload.query);\n      } else if (action.type === MEMBER_DATA_LOADED) {\n        this.updateMemberData(action.payload);\n      }\n      return next(action);\n    };\n  }\n\n  updateMemberData(data) {\n    this.members = data.slice(1).reduce(function (list, row) {\n      list.push({\n        id: row[0],\n        name: row[1]\n      });\n      return list;\n    }, []);\n    console.log(this.members);\n  }\n\n  lookupUser(query) {\n    const results = [];\n\n    debugger;\n\n    for (let i = 0; i < this.members.length; i++) {\n      let member = this.members[i];\n      if (member.id == query || member.name.includes(query)) {\n        results.push(member);\n      }\n    }\n\n    if (results.length > 1) {\n      this.store.dispatch(lookupResults(results));\n    } else {\n      this.store.dispatch(logUser(results[0].name));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}