{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _classCallCheck = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar analytics_v2_4;\n\n(function (analytics_v2_4) {\n  /**\n   * Google Analytics API\n   *\n   * Views and manages your Google Analytics data.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const analytics = google.analytics('v2.4');\n   *\n   * @namespace analytics\n   * @type {Function}\n   * @version v2.4\n   * @variation v2.4\n   * @param {object=} options Options for Analytics\n   */\n  var Analytics =\n  /*#__PURE__*/\n  function () {\n    function Analytics(options, google) {\n      _classCallCheck(this, Analytics);\n\n      this.root = this;\n      this._options = options || {};\n      this.google = google;\n      this.getRoot.bind(this);\n      this.data = new Resource$Data(this);\n      this.management = new Resource$Management(this);\n    }\n\n    _createClass(Analytics, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }]);\n\n    return Analytics;\n  }();\n\n  analytics_v2_4.Analytics = Analytics;\n\n  var Resource$Data =\n  /*#__PURE__*/\n  function () {\n    function Resource$Data(root) {\n      _classCallCheck(this, Resource$Data);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Data, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/data').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['ids', 'start-date', 'end-date', 'metrics'],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Data;\n  }();\n\n  analytics_v2_4.Resource$Data = Resource$Data;\n\n  var Resource$Management =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management(root) {\n      _classCallCheck(this, Resource$Management);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.accounts = new Resource$Management$Accounts(root);\n      this.goals = new Resource$Management$Goals(root);\n      this.profiles = new Resource$Management$Profiles(root);\n      this.segments = new Resource$Management$Segments(root);\n      this.webproperties = new Resource$Management$Webproperties(root);\n    }\n\n    _createClass(Resource$Management, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }]);\n\n    return Resource$Management;\n  }();\n\n  analytics_v2_4.Resource$Management = Resource$Management;\n\n  var Resource$Management$Accounts =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management$Accounts(root) {\n      _classCallCheck(this, Resource$Management$Accounts);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Management$Accounts, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/management/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Accounts;\n  }();\n\n  analytics_v2_4.Resource$Management$Accounts = Resource$Management$Accounts;\n\n  var Resource$Management$Goals =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management$Goals(root) {\n      _classCallCheck(this, Resource$Management$Goals);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Management$Goals, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['accountId', 'webPropertyId', 'profileId'],\n          pathParams: ['accountId', 'profileId', 'webPropertyId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Goals;\n  }();\n\n  analytics_v2_4.Resource$Management$Goals = Resource$Management$Goals;\n\n  var Resource$Management$Profiles =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management$Profiles(root) {\n      _classCallCheck(this, Resource$Management$Profiles);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Management$Profiles, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['accountId', 'webPropertyId'],\n          pathParams: ['accountId', 'webPropertyId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Profiles;\n  }();\n\n  analytics_v2_4.Resource$Management$Profiles = Resource$Management$Profiles;\n\n  var Resource$Management$Segments =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management$Segments(root) {\n      _classCallCheck(this, Resource$Management$Segments);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Management$Segments, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/management/segments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Segments;\n  }();\n\n  analytics_v2_4.Resource$Management$Segments = Resource$Management$Segments;\n\n  var Resource$Management$Webproperties =\n  /*#__PURE__*/\n  function () {\n    function Resource$Management$Webproperties(root) {\n      _classCallCheck(this, Resource$Management$Webproperties);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Management$Webproperties, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/analytics/v2.4/management/accounts/{accountId}/webproperties').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['accountId'],\n          pathParams: ['accountId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Management$Webproperties;\n  }();\n\n  analytics_v2_4.Resource$Management$Webproperties = Resource$Management$Webproperties;\n})(analytics_v2_4 = exports.analytics_v2_4 || (exports.analytics_v2_4 = {}));","map":null,"metadata":{},"sourceType":"script"}