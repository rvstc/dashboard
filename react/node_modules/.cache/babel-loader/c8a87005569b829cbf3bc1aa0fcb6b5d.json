{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _DrawerShade = require('./DrawerShade');\n\nvar _DrawerShade2 = _interopRequireDefault(_DrawerShade);\n\nvar _DrawerPane = require('./DrawerPane');\n\nvar _DrawerPane2 = _interopRequireDefault(_DrawerPane);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Temporary = function (_Component) {\n  _inherits(Temporary, _Component);\n\n  _createClass(Temporary, null, [{\n    key: 'handleDrawerClick',\n    value: function handleDrawerClick(event) {\n      event.stopPropagation();\n    }\n  }, {\n    key: 'isWrongPointer',\n    value: function isWrongPointer(pointerType) {\n      return pointerType && pointerType !== 'touch';\n    }\n  }]);\n\n  function Temporary(props) {\n    _classCallCheck(this, Temporary);\n\n    var _this = _possibleConstructorReturn(this, (Temporary.__proto__ || Object.getPrototypeOf(Temporary)).call(this, props));\n\n    _this.handleShadeClick = _this.handleShadeClick.bind(_this);\n    _this.handleTransitionend = _this.handleTransitionend.bind(_this);\n    _this.handleTouchstart = _this.handleTouchstart.bind(_this);\n    _this.handleTouchmove = _this.handleTouchmove.bind(_this);\n    _this.handleTouchend = _this.handleTouchend.bind(_this);\n    _this.close = _this.close.bind(_this);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Temporary, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      if (this.props.open !== newProps.open) {\n        this.setState({\n          animating: true\n        });\n      }\n    }\n  }, {\n    key: 'handleShadeClick',\n    value: function handleShadeClick() {\n      this.close();\n    }\n  }, {\n    key: 'handleTouchstart',\n    value: function handleTouchstart(_ref, drawerWidth) {\n      var pointerType = _ref.pointerType,\n          touches = _ref.touches,\n          pageX = _ref.pageX;\n\n      if (!this.props.open) {\n        return;\n      }\n\n      if (Temporary.isWrongPointer(pointerType)) {\n        return;\n      }\n\n      this.startX = touches ? touches[0].pageX : pageX;\n      this.touchingSideNav = true;\n      this.drawerWidth = drawerWidth;\n      this.setState({\n        currentX: this.startX\n      });\n    }\n  }, {\n    key: 'handleTouchmove',\n    value: function handleTouchmove(_ref2) {\n      var pointerType = _ref2.pointerType,\n          touches = _ref2.touches,\n          pageX = _ref2.pageX;\n\n      if (Temporary.isWrongPointer(pointerType)) {\n        return;\n      }\n\n      var currentX = touches ? touches[0].pageX : pageX;\n      this.setState({\n        currentX: currentX\n      });\n    }\n  }, {\n    key: 'handleTouchend',\n    value: function handleTouchend(_ref3) {\n      var pointerType = _ref3.pointerType;\n\n      if (Temporary.isWrongPointer(pointerType)) {\n        return;\n      }\n\n      var newPosition = this.calculateDrawerPosition();\n      this.touchingSideNav = false;\n      this.setState({\n        animating: true\n      }); // Did the user close the drawer by more than 50%?\n\n      if (Math.abs(newPosition / this.drawerWidth) >= 0.5) {\n        this.close();\n      }\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      var onClose = this.props.onClose;\n\n      if (typeof onClose === 'function') {\n        onClose();\n      }\n    }\n  }, {\n    key: 'handleTransitionend',\n    value: function handleTransitionend() {\n      this.setState({\n        animating: false\n      });\n    }\n  }, {\n    key: 'calculateDrawerPosition',\n    value: function calculateDrawerPosition() {\n      if (this.touchingSideNav) {\n        return Math.min(0, this.state.currentX - this.startX);\n      }\n\n      return null;\n    }\n  }, {\n    key: 'calculateShadeOpacity',\n    value: function calculateShadeOpacity(position) {\n      if (this.touchingSideNav) {\n        return Math.max(0, 1 + 1 * (position / this.drawerWidth));\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          children = _props.children,\n          open = _props.open,\n          otherProps = _objectWithoutProperties(_props, ['className', 'children', 'open']);\n\n      var animating = this.state.animating;\n\n      var childs = _react2.default.Children.map(children, function (child) {\n        return _react2.default.cloneElement(child, {\n          temporary: true\n        });\n      });\n\n      var position = this.calculateDrawerPosition();\n      var opacity = this.calculateShadeOpacity(position);\n      return _react2.default.createElement(_DrawerShade2.default, _extends({\n        animating: animating,\n        className: className,\n        onClick: this.handleShadeClick,\n        onTouchend: this.handleTouchend,\n        onTouchmove: this.handleTouchmove,\n        opacity: opacity,\n        open: open\n      }, otherProps), _react2.default.createElement(_DrawerPane2.default, {\n        onClick: Temporary.handleDrawerClick,\n        onTouchstart: this.handleTouchstart,\n        animating: animating,\n        onTransitionend: this.handleTransitionend,\n        position: position\n      }, childs));\n    }\n  }]);\n\n  return Temporary;\n}(_react.Component);\n\nTemporary.propTypes = {\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node,\n  open: _propTypes2.default.bool,\n  onClose: _propTypes2.default.func,\n  header: _propTypes2.default.oneOf([_propTypes2.default.string, _propTypes2.default.node])\n};\nexports.default = Temporary;","map":null,"metadata":{},"sourceType":"script"}