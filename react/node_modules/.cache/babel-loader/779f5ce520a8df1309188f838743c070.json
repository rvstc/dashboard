{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _classCallCheck = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar classroom_v1;\n\n(function (classroom_v1) {\n  /**\n   * Google Classroom API\n   *\n   * Manages classes, rosters, and invitations in Google Classroom.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const classroom = google.classroom('v1');\n   *\n   * @namespace classroom\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Classroom\n   */\n  var Classroom =\n  /*#__PURE__*/\n  function () {\n    function Classroom(options, google) {\n      _classCallCheck(this, Classroom);\n\n      this.root = this;\n      this._options = options || {};\n      this.google = google;\n      this.getRoot.bind(this);\n      this.courses = new Resource$Courses(this);\n      this.invitations = new Resource$Invitations(this);\n      this.registrations = new Resource$Registrations(this);\n      this.userProfiles = new Resource$Userprofiles(this);\n    }\n\n    _createClass(Classroom, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }]);\n\n    return Classroom;\n  }();\n\n  classroom_v1.Classroom = Classroom;\n\n  var Resource$Courses =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses(root) {\n      _classCallCheck(this, Resource$Courses);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.aliases = new Resource$Courses$Aliases(root);\n      this.announcements = new Resource$Courses$Announcements(root);\n      this.courseWork = new Resource$Courses$Coursework(root);\n      this.students = new Resource$Courses$Students(root);\n      this.teachers = new Resource$Courses$Teachers(root);\n    }\n\n    _createClass(Resource$Courses, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PUT'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses;\n  }();\n\n  classroom_v1.Resource$Courses = Resource$Courses;\n\n  var Resource$Courses$Aliases =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Aliases(root) {\n      _classCallCheck(this, Resource$Courses$Aliases);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Courses$Aliases, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases/{alias}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'alias'],\n          pathParams: ['alias', 'courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/aliases').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Aliases;\n  }();\n\n  classroom_v1.Resource$Courses$Aliases = Resource$Courses$Aliases;\n\n  var Resource$Courses$Announcements =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Announcements(root) {\n      _classCallCheck(this, Resource$Courses$Announcements);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Courses$Announcements, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAssignees\",\n      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}:modifyAssignees').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/announcements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Announcements;\n  }();\n\n  classroom_v1.Resource$Courses$Announcements = Resource$Courses$Announcements;\n\n  var Resource$Courses$Coursework =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Coursework(root) {\n      _classCallCheck(this, Resource$Courses$Coursework);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.studentSubmissions = new Resource$Courses$Coursework$Studentsubmissions(root);\n    }\n\n    _createClass(Resource$Courses$Coursework, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAssignees\",\n      value: function modifyAssignees(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}:modifyAssignees').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'id'],\n          pathParams: ['courseId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Coursework;\n  }();\n\n  classroom_v1.Resource$Courses$Coursework = Resource$Courses$Coursework;\n\n  var Resource$Courses$Coursework$Studentsubmissions =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Coursework$Studentsubmissions(root) {\n      _classCallCheck(this, Resource$Courses$Coursework$Studentsubmissions);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Courses$Coursework$Studentsubmissions, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId'],\n          pathParams: ['courseId', 'courseWorkId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"modifyAttachments\",\n      value: function modifyAttachments(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"reclaim\",\n      value: function reclaim(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"return\",\n      value: function _return(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"turnIn\",\n      value: function turnIn(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'courseWorkId', 'id'],\n          pathParams: ['courseId', 'courseWorkId', 'id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Coursework$Studentsubmissions;\n  }();\n\n  classroom_v1.Resource$Courses$Coursework$Studentsubmissions = Resource$Courses$Coursework$Studentsubmissions;\n\n  var Resource$Courses$Students =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Students(root) {\n      _classCallCheck(this, Resource$Courses$Students);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Courses$Students, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/students').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Students;\n  }();\n\n  classroom_v1.Resource$Courses$Students = Resource$Courses$Students;\n\n  var Resource$Courses$Teachers =\n  /*#__PURE__*/\n  function () {\n    function Resource$Courses$Teachers(root) {\n      _classCallCheck(this, Resource$Courses$Teachers);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Courses$Teachers, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId', 'userId'],\n          pathParams: ['courseId', 'userId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/courses/{courseId}/teachers').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['courseId'],\n          pathParams: ['courseId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Courses$Teachers;\n  }();\n\n  classroom_v1.Resource$Courses$Teachers = Resource$Courses$Teachers;\n\n  var Resource$Invitations =\n  /*#__PURE__*/\n  function () {\n    function Resource$Invitations(root) {\n      _classCallCheck(this, Resource$Invitations);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Invitations, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['id'],\n          pathParams: ['id'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Invitations;\n  }();\n\n  classroom_v1.Resource$Invitations = Resource$Invitations;\n\n  var Resource$Registrations =\n  /*#__PURE__*/\n  function () {\n    function Resource$Registrations(root) {\n      _classCallCheck(this, Resource$Registrations);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Registrations, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/registrations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/registrations/{registrationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['registrationId'],\n          pathParams: ['registrationId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Registrations;\n  }();\n\n  classroom_v1.Resource$Registrations = Resource$Registrations;\n\n  var Resource$Userprofiles =\n  /*#__PURE__*/\n  function () {\n    function Resource$Userprofiles(root) {\n      _classCallCheck(this, Resource$Userprofiles);\n\n      this.root = root;\n      this.getRoot.bind(this);\n      this.guardianInvitations = new Resource$Userprofiles$Guardianinvitations(root);\n      this.guardians = new Resource$Userprofiles$Guardians(root);\n    }\n\n    _createClass(Resource$Userprofiles, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['userId'],\n          pathParams: ['userId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles;\n  }();\n\n  classroom_v1.Resource$Userprofiles = Resource$Userprofiles;\n\n  var Resource$Userprofiles$Guardianinvitations =\n  /*#__PURE__*/\n  function () {\n    function Resource$Userprofiles$Guardianinvitations(root) {\n      _classCallCheck(this, Resource$Userprofiles$Guardianinvitations);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Userprofiles$Guardianinvitations, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['studentId', 'invitationId'],\n          pathParams: ['invitationId', 'studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"patch\",\n      value: function patch(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardianInvitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'PATCH'\n          }, options),\n          params: params,\n          requiredParams: ['studentId', 'invitationId'],\n          pathParams: ['invitationId', 'studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles$Guardianinvitations;\n  }();\n\n  classroom_v1.Resource$Userprofiles$Guardianinvitations = Resource$Userprofiles$Guardianinvitations;\n\n  var Resource$Userprofiles$Guardians =\n  /*#__PURE__*/\n  function () {\n    function Resource$Userprofiles$Guardians(root) {\n      _classCallCheck(this, Resource$Userprofiles$Guardians);\n\n      this.root = root;\n      this.getRoot.bind(this);\n    }\n\n    _createClass(Resource$Userprofiles$Guardians, [{\n      key: \"getRoot\",\n      value: function getRoot() {\n        return this.root;\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'DELETE'\n          }, options),\n          params: params,\n          requiredParams: ['studentId', 'guardianId'],\n          pathParams: ['guardianId', 'studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians/{guardianId}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['studentId', 'guardianId'],\n          pathParams: ['guardianId', 'studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }, {\n      key: \"list\",\n      value: function list(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://classroom.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/userProfiles/{studentId}/guardians').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['studentId'],\n          pathParams: ['studentId'],\n          context: this.getRoot()\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Userprofiles$Guardians;\n  }();\n\n  classroom_v1.Resource$Userprofiles$Guardians = Resource$Userprofiles$Guardians;\n})(classroom_v1 = exports.classroom_v1 || (exports.classroom_v1 = {}));","map":null,"metadata":{},"sourceType":"script"}