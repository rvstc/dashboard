{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _ToolbarRow = require('./ToolbarRow');\n\nvar _ToolbarRow2 = _interopRequireDefault(_ToolbarRow);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ROOT = 'mdc-toolbar';\nvar FIXED = ROOT + '--fixed';\nvar WATERFALL = ROOT + '--waterfall';\nvar FIXED_LAST_ROW_ONLY = ROOT + '--fixed-lastrow-only';\nvar FLEXIBLE = ROOT + '--flexible';\nvar FLEXIBLE_DEFAULT_BEHAVIOR = ROOT + '--flexible-default-behavior';\nvar FLEXIBLE_MAX = ROOT + '--flexible-space-maximized';\nvar FLEXIBLE_MIN = ROOT + '--flexible-space-minimized';\nvar TOOLBAR_MOBILE_BREAKPOINT = 600;\nvar TOOLBAR_ROW_HEIGHT = 64;\nvar TOOLBAR_ROW_MOBILE_HEIGHT = 56;\n\nvar Toolbar = function (_React$PureComponent) {\n  _inherits(Toolbar, _React$PureComponent);\n\n  function Toolbar(props) {\n    _classCallCheck(this, Toolbar);\n\n    var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, props));\n\n    _this.state = {\n      flexibleExpansionRatio: 0\n    };\n    _this.handleScroll = _this.handleScroll.bind(_this);\n    _this.calculations = {\n      toolbarRowHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(Toolbar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.getWindow().addEventListener('scroll', this.handleScroll);\n      this.initKeyRatio();\n      this.setKeyHeights();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.getWindow().removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: 'getFlexibleExpansionRatio',\n    value: function getFlexibleExpansionRatio() {\n      // To prevent division by zero when there is no flexibleExpansionHeight\n      var delta = 0.0001;\n      var scrollTop = this.state.scrollTop;\n      var flexibleExpansionHeight = this.calculations.flexibleExpansionHeight;\n      return Math.max(0, 1 - scrollTop / (flexibleExpansionHeight + delta));\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      var windowContext = this.props.windowContext;\n\n      if (windowContext) {\n        return windowContext;\n      }\n\n      return window;\n    }\n  }, {\n    key: 'getRowHeight',\n    value: function getRowHeight() {\n      var breakpoint = TOOLBAR_MOBILE_BREAKPOINT;\n      var viewPortWidth = this.getWindow().innerWidth;\n      return viewPortWidth < breakpoint ? TOOLBAR_ROW_MOBILE_HEIGHT : TOOLBAR_ROW_HEIGHT;\n    }\n  }, {\n    key: 'setKeyHeights',\n    value: function setKeyHeights() {\n      var newToolbarRowHeight = this.getRowHeight();\n      var _calculations = this.calculations,\n          toolbarRatio = _calculations.toolbarRatio,\n          toolbarRowHeight = _calculations.toolbarRowHeight;\n\n      if (newToolbarRowHeight !== this.calculations.toolbarRowHeight) {\n        this.calculations.toolbarRowHeight = newToolbarRowHeight;\n        this.calculations.toolbarHeight = toolbarRatio * toolbarRowHeight;\n        this.calculations.flexibleExpansionHeight = this.calculations.flexibleExpansionRatio * this.calculations.toolbarRowHeight;\n        this.calculations.maxTranslateYDistance = this.calculations.maxTranslateYRatio * this.calculations.toolbarRowHeight;\n        this.calculations.scrollThreshold = this.calculations.scrollThresholdRatio * this.calculations.toolbarRowHeight;\n      }\n    }\n  }, {\n    key: 'initKeyRatio',\n    value: function initKeyRatio() {\n      var toolbarRowHeight = this.getRowHeight();\n      var firstRowMaxRatio = this.calculations.firstRowHeight / toolbarRowHeight;\n      this.calculations.toolbarRatio = this.calculations.rootOffsetHeight / toolbarRowHeight;\n      this.calculations.flexibleExpansionRatio = firstRowMaxRatio - 1;\n      this.calculations.maxTranslateYRatio = this.fixedLastrow ? this.calculations.toolbarRatio - firstRowMaxRatio : 0;\n      this.calculations.scrollThresholdRatio = (this.fixedLastrow ? this.calculations.toolbarRatio : firstRowMaxRatio) - 1;\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll() {\n      this.setState({\n        scrollTop: this.getWindow().pageYOffset\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this,\n          _classnames;\n\n      var _props = this.props,\n          className = _props.className,\n          fixed = _props.fixed,\n          waterfall = _props.waterfall,\n          fixedLastRowOnly = _props.fixedLastRowOnly,\n          flexible = _props.flexible,\n          flexibleDefaultBehavior = _props.flexibleDefaultBehavior,\n          children = _props.children,\n          windowContext = _props.windowContext,\n          otherProps = _objectWithoutProperties(_props, ['className', 'fixed', 'waterfall', 'fixedLastRowOnly', 'flexible', 'flexibleDefaultBehavior', 'children', 'windowContext']);\n\n      var firstRowFound = false;\n\n      var childs = _react.Children.map(children, function (child) {\n        if (!firstRowFound && child.type === _ToolbarRow2.default) {\n          return (0, _react.cloneElement)(child, {\n            onHeight: function onHeight(height) {\n              _this2.calculations.firstRowHeight = height;\n            }\n          });\n        }\n\n        return child;\n      });\n\n      var flexibleExpansionRatio = this.getFlexibleExpansionRatio();\n      return _react2.default.createElement('header', _extends({\n        className: (0, _classnames3.default)(ROOT, (_classnames = {}, _defineProperty(_classnames, FIXED, fixed), _defineProperty(_classnames, FIXED_LAST_ROW_ONLY, fixedLastRowOnly), _defineProperty(_classnames, WATERFALL, waterfall), _defineProperty(_classnames, FLEXIBLE, flexible), _defineProperty(_classnames, FLEXIBLE_DEFAULT_BEHAVIOR, flexibleDefaultBehavior), _defineProperty(_classnames, FLEXIBLE_MAX, flexibleExpansionRatio === 1), _defineProperty(_classnames, FLEXIBLE_MIN, flexibleExpansionRatio === 0), _classnames), className),\n        ref: function ref(native) {\n          if (native) {\n            _this2.calculations.rootOffsetHeight = native.offsetHeight;\n          }\n        }\n      }, otherProps), childs);\n    }\n  }]);\n\n  return Toolbar;\n}(_react2.default.PureComponent);\n\nToolbar.propTypes = {\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node,\n  fixed: _propTypes2.default.bool,\n  waterfall: _propTypes2.default.bool,\n  flexible: _propTypes2.default.bool,\n  fixedLastRowOnly: _propTypes2.default.bool,\n  flexibleDefaultBehavior: _propTypes2.default.bool,\n  onChange: _propTypes2.default.func,\n  windowContext: _propTypes2.default.object // eslint-disable-line react/forbid-prop-types\n\n};\nexports.default = Toolbar;","map":null,"metadata":{},"sourceType":"script"}