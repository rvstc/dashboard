{"ast":null,"code":"import { createAction } from '../../util/actions_helper';\nimport * as types from './types';\nexport var gapiUpdateStatus = function gapiUpdateStatus(isSignedIn, isAuthorized, user) {\n  return createAction(types.GAPI_UPDATE_STATUS, {\n    isSignedIn: isSignedIn,\n    isAuthorized: isAuthorized,\n    user: user\n  });\n};\nexport var gapiToggleAuth = function gapiToggleAuth() {\n  return createAction(types.GAPI_TOGGLE_AUTH);\n};\nexport var gapiReauth = function gapiReauth() {\n  return createAction(types.GAPI_REAUTH);\n};\nexport var gapiRevoke = function gapiRevoke() {\n  return createAction(types.GAPI_REVOKE);\n};\nexport var memberDataLoaded = function memberDataLoaded(data) {\n  return createAction(types.MEMBER_DATA_LOADED, data);\n};","map":{"version":3,"sources":["/Users/williamsnathan/src/dashboard/src/services/gapi/actions.ts"],"names":["createAction","types","gapiUpdateStatus","isSignedIn","isAuthorized","user","GAPI_UPDATE_STATUS","gapiToggleAuth","GAPI_TOGGLE_AUTH","gapiReauth","GAPI_REAUTH","gapiRevoke","GAPI_REVOKE","memberDataLoaded","data","MEMBER_DATA_LOADED"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,2BAA3B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAsBC,YAAtB,EAA6CC,IAA7C;AAAA,SAAsEL,YAAY,CAChHC,KAAK,CAACK,kBAD0G,EAEhH;AAACH,IAAAA,UAAU,EAAVA,UAAD;AAAaC,IAAAA,YAAY,EAAZA,YAAb;AAA2BC,IAAAA,IAAI,EAAJA;AAA3B,GAFgH,CAAlF;AAAA,CAAzB;AAIP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMP,YAAY,CAACC,KAAK,CAACO,gBAAP,CAAlB;AAAA,CAAvB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMT,YAAY,CAACC,KAAK,CAACS,WAAP,CAAlB;AAAA,CAAnB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMX,YAAY,CAACC,KAAK,CAACW,WAAP,CAAlB;AAAA,CAAnB;AAEP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,SAAed,YAAY,CAACC,KAAK,CAACc,kBAAP,EAA2BD,IAA3B,CAA3B;AAAA,CAAzB","sourcesContent":["import {createAction} from '../../util/actions_helper';\nimport {GoogleUserInfo} from './models';\nimport * as types from './types';\n\nexport const gapiUpdateStatus = (isSignedIn: boolean, isAuthorized: boolean, user: GoogleUserInfo) => createAction(\n  types.GAPI_UPDATE_STATUS,\n  {isSignedIn, isAuthorized, user});\n\nexport const gapiToggleAuth = () => createAction(types.GAPI_TOGGLE_AUTH);\n\nexport const gapiReauth = () => createAction(types.GAPI_REAUTH);\n\nexport const gapiRevoke = () => createAction(types.GAPI_REVOKE);\n\nexport const memberDataLoaded = (data: any) => createAction(types.MEMBER_DATA_LOADED, data);\n"]},"metadata":{},"sourceType":"module"}