{"ast":null,"code":"import _classCallCheck from \"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { google } from 'googleapis';\nimport * as types from './types';\nimport { gapiUpdateStatus, memberDataLoaded } from './actions';\nimport { GoogleUserInfo } from './models';\nvar API_KEY = 'AIzaSyBCvgn0n9lJ20sDK6jVG-92Yedf1foqjgE';\nvar CLIENT_ID = '617186283105-5e603j6qc477f5q603nf8kef6s34aeov.apps.googleusercontent.com';\nvar DISCOVERY_URL = 'https://sheets.googleapis.com/$discovery/rest?version=v4';\nvar SCOPES = ['https://www.googleapis.com/auth/spreadsheets'];\nvar SPREADSHEET_ID = '13bsAu7wG39q0khrefawv5jbgGAz9aKSOMvVfbqsmSWU';\nvar MEMBERS_SHEET_NAME = 'Members';\nvar GAPI_SCRIPT_ID = 'gapi-script';\nvar MEMBER_DATA_REFRESH_INTERVAL = 5 * 1000 * 1000;\n\nvar GapiMiddleware =\n/*#__PURE__*/\nfunction () {\n  function GapiMiddleware() {\n    var _this = this;\n\n    _classCallCheck(this, GapiMiddleware);\n\n    this.oauth2Client = new google.auth.OAuth2(CLIENT_ID);\n    this.GoogleAuth.isSignedIn.listen(this.handleStatusUpdate.bind(this));\n    this.handleStatusUpdate(this.GoogleAuth.isSignedIn.get());\n    var url = oauth2Client.generateAuthUrl({\n      // 'online' (default) or 'offline' (gets refresh_token)\n      access_type: 'offline',\n      // If you only need one scope you can pass it as a string\n      scope: SCOPES\n    });\n    var sheets = google.sheets({\n      version: 'v4',\n      auth: API_KEY\n    });\n    return function (store) {\n      _this.store = store;\n      return _this.muxer();\n    };\n  }\n\n  _createClass(GapiMiddleware, [{\n    key: \"muxer\",\n    value: function muxer() {\n      var _this2 = this;\n\n      return function (next) {\n        return function (action) {\n          if (action.type === types.GAPI_TOGGLE_AUTH) {\n            _this2.toggleAuth();\n          } else if (action.type === types.GAPI_REAUTH) {\n            _this2.reauth();\n          } else if (action.type === types.GAPI_REVOKE) {\n            _this2.revokeAccess();\n          }\n\n          return next(action);\n        };\n      };\n    }\n    /** Injects the Google API script into the DOM. */\n\n  }, {\n    key: \"loadGapi\",\n    value: function loadGapi() {\n      var _this3 = this;\n\n      var script = document.createElement('script');\n      script.id = GAPI_SCRIPT_ID;\n      script.src = 'https://apis.google.com/js/api.js';\n\n      script.onload = function () {\n        script.onload = function () {};\n\n        window.gapi.load('client', _this3.initClient.bind(_this3));\n      };\n\n      document.body.appendChild(script);\n    }\n    /** Initializes the GoogleAuth client using the app info. */\n\n  }, {\n    key: \"initClient\",\n    value: function initClient() {\n      window.gapi.client.init({\n        'apiKey': API_KEY,\n        'clientId': CLIENT_ID,\n        'discoveryDocs': [DISCOVERY_URL],\n        'scope': SCOPE\n      }).then(function () {\n        this.GoogleAuth = window.gapi.auth2.getAuthInstance();\n        this.GoogleAuth.isSignedIn.listen(this.handleStatusUpdate.bind(this));\n        this.handleStatusUpdate(this.GoogleAuth.isSignedIn.get());\n      }.bind(this));\n    }\n    /** Listener called when user signin status changes. */\n\n  }, {\n    key: \"handleStatusUpdate\",\n    value: function handleStatusUpdate(isSignedIn) {\n      var isAuthorized = false;\n      var user = {};\n      this.GoogleUser = this.GoogleAuth.currentUser.get();\n\n      if (isSignedIn) {\n        isAuthorized = this.GoogleUser.hasGrantedScopes(SCOPE);\n        var basicProfile = this.GoogleUser.getBasicProfile();\n        user = new GoogleUserInfo(basicProfile.getId(), basicProfile.getName(), basicProfile.getGivenName(), basicProfile.getFamilyName(), basicProfile.getImageUrl(), basicProfile.getEmail());\n      }\n\n      if (this.loadMemberDataInterval) {\n        clearInterval(this.loadMemberDataInterval);\n      }\n\n      if (isAuthorized) {\n        this.loadMemberData();\n        this.loadMemberDataInterval = setInterval(this.loadMemberData.bind(this), MEMBER_DATA_REFRESH_INTERVAL);\n      }\n\n      this.store.dispatch(gapiUpdateStatus(isSignedIn, isAuthorized, user));\n    }\n  }, {\n    key: \"toggleAuth\",\n    value: function toggleAuth() {\n      if (this.GoogleAuth.isSignedIn.get()) {\n        this.GoogleAuth.signOut();\n      } else {\n        this.GoogleAuth.signIn();\n      }\n    }\n  }, {\n    key: \"reauth\",\n    value: function reauth() {\n      this.GoogleUser.grant({\n        scope: SCOPE\n      });\n    }\n  }, {\n    key: \"revokeAccess\",\n    value: function revokeAccess() {\n      this.GoogleAuth.disconnect();\n    }\n  }, {\n    key: \"loadMemberData\",\n    value: function loadMemberData() {\n      var _this4 = this;\n\n      var spreadsheetId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SPREADSHEET_ID;\n      var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MEMBERS_SHEET_NAME;\n      window.gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: spreadsheetId,\n        range: range\n      }).then(function (response) {\n        _this4.store.dispatch(memberDataLoaded(response.result.values));\n      });\n    }\n  }]);\n\n  return GapiMiddleware;\n}();\n\nexport { GapiMiddleware as default };","map":{"version":3,"sources":["/Users/williamsnathan/src/dashboard/src/services/gapi/middleware.js"],"names":["google","types","gapiUpdateStatus","memberDataLoaded","GoogleUserInfo","API_KEY","CLIENT_ID","DISCOVERY_URL","SCOPES","SPREADSHEET_ID","MEMBERS_SHEET_NAME","GAPI_SCRIPT_ID","MEMBER_DATA_REFRESH_INTERVAL","GapiMiddleware","oauth2Client","auth","OAuth2","GoogleAuth","isSignedIn","listen","handleStatusUpdate","bind","get","url","generateAuthUrl","access_type","scope","sheets","version","store","muxer","next","action","type","GAPI_TOGGLE_AUTH","toggleAuth","GAPI_REAUTH","reauth","GAPI_REVOKE","revokeAccess","script","document","createElement","id","src","onload","window","gapi","load","initClient","body","appendChild","client","init","SCOPE","then","auth2","getAuthInstance","isAuthorized","user","GoogleUser","currentUser","hasGrantedScopes","basicProfile","getBasicProfile","getId","getName","getGivenName","getFamilyName","getImageUrl","getEmail","loadMemberDataInterval","clearInterval","loadMemberData","setInterval","dispatch","signOut","signIn","grant","disconnect","spreadsheetId","range","spreadsheets","values","response","result"],"mappings":"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","sourcesContent":["import { google } from 'googleapis';\nimport * as types from './types';\nimport { gapiUpdateStatus, memberDataLoaded } from './actions';\nimport { GoogleUserInfo } from './models';\n\n\nconst API_KEY = 'AIzaSyBCvgn0n9lJ20sDK6jVG-92Yedf1foqjgE';\nconst CLIENT_ID = '617186283105-5e603j6qc477f5q603nf8kef6s34aeov.apps.googleusercontent.com';\nconst DISCOVERY_URL = 'https://sheets.googleapis.com/$discovery/rest?version=v4';\nconst SCOPES = ['https://www.googleapis.com/auth/spreadsheets'];\n\nconst SPREADSHEET_ID = '13bsAu7wG39q0khrefawv5jbgGAz9aKSOMvVfbqsmSWU';\nconst MEMBERS_SHEET_NAME = 'Members';\n\nconst GAPI_SCRIPT_ID = 'gapi-script';\nconst MEMBER_DATA_REFRESH_INTERVAL = 5 * 1000 * 1000;\n\n\nexport default class GapiMiddleware {\n\n  constructor() {\n    this.oauth2Client = new google.auth.OAuth2(CLIENT_ID);\n    this.GoogleAuth.isSignedIn.listen(this.handleStatusUpdate.bind(this));\n    this.handleStatusUpdate(this.GoogleAuth.isSignedIn.get());\n\n    const url = oauth2Client.generateAuthUrl({\n      // 'online' (default) or 'offline' (gets refresh_token)\n      access_type: 'offline',\n\n      // If you only need one scope you can pass it as a string\n      scope: SCOPES\n    });\n\n    const sheets = google.sheets({\n      version: 'v4',\n      auth: API_KEY\n    });\n\n    return store => {\n      this.store = store;\n      return this.muxer();\n    };\n  }\n\n  muxer() {\n    return next => action => {\n      if (action.type === types.GAPI_TOGGLE_AUTH) {\n        this.toggleAuth();\n      } else if (action.type === types.GAPI_REAUTH) {\n        this.reauth();\n      } else if (action.type === types.GAPI_REVOKE) {\n        this.revokeAccess();\n      }\n      return next(action);\n    };\n  }\n\n  /** Injects the Google API script into the DOM. */\n  loadGapi() {\n    const script = document.createElement('script');\n    script.id = GAPI_SCRIPT_ID;\n    script.src = 'https://apis.google.com/js/api.js';\n\n    script.onload = () => {\n      script.onload = () => { };\n      window.gapi.load('client', this.initClient.bind(this));\n    };\n\n    document.body.appendChild(script);\n  }\n\n  /** Initializes the GoogleAuth client using the app info. */\n  initClient() {\n    window.gapi.client.init({\n      'apiKey': API_KEY,\n      'clientId': CLIENT_ID,\n      'discoveryDocs': [DISCOVERY_URL],\n      'scope': SCOPE,\n    }).then(function () {\n      this.GoogleAuth = window.gapi.auth2.getAuthInstance();\n      this.GoogleAuth.isSignedIn.listen(this.handleStatusUpdate.bind(this));\n      this.handleStatusUpdate(this.GoogleAuth.isSignedIn.get());\n    }.bind(this));\n  }\n\n  /** Listener called when user signin status changes. */\n  handleStatusUpdate(isSignedIn) {\n    let isAuthorized = false;\n    let user = {};\n\n    this.GoogleUser = this.GoogleAuth.currentUser.get();\n    if (isSignedIn) {\n      isAuthorized = this.GoogleUser.hasGrantedScopes(SCOPE);\n      const basicProfile = this.GoogleUser.getBasicProfile();\n      user = new GoogleUserInfo(\n        basicProfile.getId(),\n        basicProfile.getName(),\n        basicProfile.getGivenName(),\n        basicProfile.getFamilyName(),\n        basicProfile.getImageUrl(),\n        basicProfile.getEmail());\n    }\n\n    if (this.loadMemberDataInterval) {\n      clearInterval(this.loadMemberDataInterval);\n    }\n\n    if (isAuthorized) {\n      this.loadMemberData();\n      this.loadMemberDataInterval = setInterval(\n        this.loadMemberData.bind(this), MEMBER_DATA_REFRESH_INTERVAL);\n    }\n\n    this.store.dispatch(gapiUpdateStatus(isSignedIn, isAuthorized, user));\n  }\n\n  toggleAuth() {\n    if (this.GoogleAuth.isSignedIn.get()) {\n      this.GoogleAuth.signOut();\n    } else {\n      this.GoogleAuth.signIn();\n    }\n  }\n\n  reauth() {\n    this.GoogleUser.grant({ scope: SCOPE });\n  }\n\n  revokeAccess() {\n    this.GoogleAuth.disconnect();\n  }\n\n  loadMemberData(spreadsheetId = SPREADSHEET_ID, range = MEMBERS_SHEET_NAME) {\n    window.gapi.client.sheets.spreadsheets.values\n      .get({ spreadsheetId, range })\n      .then((response) => {\n        this.store.dispatch(memberDataLoaded(response.result.values));\n      });\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}