{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DrawerPane = function (_React$PureComponent) {\n  _inherits(DrawerPane, _React$PureComponent);\n\n  function DrawerPane(props) {\n    _classCallCheck(this, DrawerPane);\n\n    var _this = _possibleConstructorReturn(this, (DrawerPane.__proto__ || Object.getPrototypeOf(DrawerPane)).call(this, props));\n\n    _this.handleTransitionend = _this.handleTransitionend.bind(_this);\n    _this.handleTouchstart = _this.handleTouchstart.bind(_this);\n    return _this;\n  }\n\n  _createClass(DrawerPane, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      var _props = this.props,\n          animating = _props.animating,\n          position = _props.position;\n\n      if (animating !== next.animating && next.animating) {\n        this.native.addEventListener('transitionend', this.handleTransitionend);\n      }\n\n      if (position !== next.position) {\n        this.setTransformPosition(next.position);\n      }\n    }\n  }, {\n    key: 'getTransformPropertyName',\n    value: function getTransformPropertyName() {\n      if (!this.transformPropertyName) {\n        var el = document.createElement('div');\n        this.transformPropertyName = 'transform' in el.style ? 'transform' : '-webkit-transform';\n      }\n\n      return this.transformPropertyName;\n    }\n  }, {\n    key: 'setTransformPosition',\n    value: function setTransformPosition(position) {\n      var propertyName = this.getTransformPropertyName();\n      var transform = position === null ? null : 'translateX(' + position + 'px)';\n      this.native.style.setProperty(propertyName, transform);\n    }\n  }, {\n    key: 'handleTransitionend',\n    value: function handleTransitionend() {\n      var onTransitionend = this.props.onTransitionend;\n      this.native.removeEventListener('transitionend', this.handleTransitionend);\n      onTransitionend();\n    }\n  }, {\n    key: 'handleTouchstart',\n    value: function handleTouchstart(event) {\n      var onTouchstart = this.props.onTouchstart;\n      var width = this.native.offsetWidth;\n      onTouchstart(event, width);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          className = _props2.className,\n          children = _props2.children,\n          onClick = _props2.onClick;\n      return _react2.default.createElement('nav', {\n        className: (0, _classnames2.default)(_constants.ROOT + '__drawer', className),\n        ref: function ref(native) {\n          _this2.native = native;\n        },\n        onClick: onClick,\n        onTouchStart: this.handleTouchstart\n      }, children);\n    }\n  }]);\n\n  return DrawerPane;\n}(_react2.default.PureComponent);\n\nDrawerPane.propTypes = {\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  onClick: _propTypes2.default.func,\n  onTouchstart: _propTypes2.default.func,\n  onTransitionend: _propTypes2.default.func,\n  animating: _propTypes2.default.bool,\n  position: _propTypes2.default.number\n};\nexports.default = DrawerPane;","map":null,"metadata":{},"sourceType":"script"}