{"ast":null,"code":"\"use strict\"; // Copyright 2014-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/williamsnathan/src/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs = require(\"fs\");\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nvar pify = require(\"pify\");\n\nvar url = require(\"url\");\n\nvar util = require(\"util\");\n\nvar apirequest_1 = require(\"./apirequest\");\n\nvar endpoint_1 = require(\"./endpoint\");\n\nvar fsp = pify(fs);\n\nvar Discovery =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Discovery for discovering API endpoints\n   *\n   * @param options Options for discovery\n   */\n  function Discovery(options) {\n    _classCallCheck(this, Discovery);\n\n    this.transporter = new google_auth_library_1.DefaultTransporter();\n    this.options = options || {};\n  }\n  /**\n   * Generate and Endpoint from an endpoint schema object.\n   *\n   * @param schema The schema from which to generate the Endpoint.\n   * @return A function that creates an endpoint.\n   */\n\n\n  _createClass(Discovery, [{\n    key: \"makeEndpoint\",\n    value: function makeEndpoint(schema) {\n      return function (options) {\n        var ep = new endpoint_1.Endpoint(options);\n        ep.applySchema(ep, schema, schema, ep);\n        return ep;\n      };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (this.options && this.options.debug) {\n        console.log.apply(this, arguments);\n      }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n\n  }, {\n    key: \"discoverAllAPIs\",\n    value: function discoverAllAPIs(discoveryUrl) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var headers, res, items, apis, versionIndex, apisIndex, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                headers = this.options.includePrivate ? {} : {\n                  'X-User-Ip': '0.0.0.0'\n                };\n                _context2.next = 3;\n                return this.transporter.request({\n                  url: discoveryUrl,\n                  headers: headers\n                });\n\n              case 3:\n                res = _context2.sent;\n                items = res.data.items;\n                _context2.next = 7;\n                return Promise.all(items.map(function (api) {\n                  return __awaiter(_this, void 0, void 0,\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    var endpointCreator;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return this.discoverAPI(api.discoveryRestUrl);\n\n                          case 2:\n                            endpointCreator = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              api: api,\n                              endpointCreator: endpointCreator\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                }));\n\n              case 7:\n                apis = _context2.sent;\n                versionIndex = {}; // tslint:disable-next-line no-any\n\n                apisIndex = {};\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 13;\n\n                _loop = function _loop() {\n                  var set = _step.value;\n\n                  if (!apisIndex[set.api.name]) {\n                    versionIndex[set.api.name] = {};\n\n                    apisIndex[set.api.name] = function (options) {\n                      var type = typeof options;\n                      var version;\n\n                      if (type === 'string') {\n                        version = options;\n                        options = {};\n                      } else if (type === 'object') {\n                        version = options.version;\n                        delete options.version;\n                      } else {\n                        throw new Error('Argument error: Accepts only string or object');\n                      }\n\n                      try {\n                        var ep = // tslint:disable-next-line: no-any\n                        set.endpointCreator(options, _this);\n                        return Object.freeze(ep); // create new & freeze\n                      } catch (e) {\n                        throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                      }\n                    };\n                  }\n\n                  versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n                };\n\n                for (_iterator = apis[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  _loop();\n                }\n\n                _context2.next = 22;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](13);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.prev = 23;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 25:\n                _context2.prev = 25;\n\n                if (!_didIteratorError) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 28:\n                return _context2.finish(25);\n\n              case 29:\n                return _context2.finish(22);\n\n              case 30:\n                return _context2.abrupt(\"return\", apisIndex);\n\n              case 31:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[13, 18, 22, 30], [23,, 25, 29]]);\n      }));\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n\n  }, {\n    key: \"discoverAPI\",\n    value: function discoverAPI(apiDiscoveryUrl) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var parts, file, res, options, _url, parameters, pcr, _res;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(typeof apiDiscoveryUrl === 'string')) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                parts = url.parse(apiDiscoveryUrl);\n\n                if (!(apiDiscoveryUrl && !parts.protocol)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                this.log('Reading from file ' + apiDiscoveryUrl);\n                _context3.next = 6;\n                return fsp.readFile(apiDiscoveryUrl, {\n                  encoding: 'utf8'\n                });\n\n              case 6:\n                file = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(JSON.parse(file)));\n\n              case 10:\n                this.log('Requesting ' + apiDiscoveryUrl);\n                _context3.next = 13;\n                return this.transporter.request({\n                  url: apiDiscoveryUrl\n                });\n\n              case 13:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(res.data));\n\n              case 15:\n                _context3.next = 27;\n                break;\n\n              case 17:\n                options = apiDiscoveryUrl;\n                this.log('Requesting ' + options.url);\n                _url = options.url;\n                delete options.url;\n                parameters = {\n                  options: {\n                    url: _url,\n                    method: 'GET'\n                  },\n                  requiredParams: [],\n                  pathParams: [],\n                  params: options,\n                  context: {\n                    google: {\n                      _options: {}\n                    },\n                    _options: {}\n                  }\n                };\n                pcr = pify(apirequest_1.createAPIRequest);\n                _context3.next = 25;\n                return pcr(parameters);\n\n              case 25:\n                _res = _context3.sent;\n                return _context3.abrupt(\"return\", this.makeEndpoint(_res.data));\n\n              case 27:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n\n  return Discovery;\n}();\n\nexports.Discovery = Discovery;","map":null,"metadata":{},"sourceType":"script"}